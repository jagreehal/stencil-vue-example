import './stencil.core';
/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import './stencil.core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}


declare global {

  namespace StencilComponents {
    interface ProfileCard {
      'image': string;
      'name': string;
    }
  }

  interface HTMLProfileCardElement extends StencilComponents.ProfileCard, HTMLStencilElement {}

  var HTMLProfileCardElement: {
    prototype: HTMLProfileCardElement;
    new (): HTMLProfileCardElement;
  };
  interface HTMLElementTagNameMap {
    'profile-card': HTMLProfileCardElement;
  }
  interface ElementTagNameMap {
    'profile-card': HTMLProfileCardElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'profile-card': JSXElements.ProfileCardAttributes;
    }
  }
  namespace JSXElements {
    export interface ProfileCardAttributes extends HTMLAttributes {
      'image'?: string;
      'name'?: string;
      'onMessageSent'?: (event: CustomEvent) => void;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }

export declare function defineCustomElements(window: any): void;